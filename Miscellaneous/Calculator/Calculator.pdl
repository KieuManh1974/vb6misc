ws := [REPEAT ' ' MIN 0];
digits := {REPEAT IN '0' TO '9'};
radixnumber := AND {REPEAT IN '0' TO '9', CASE 'A' TO 'F'}, CASE 'R', digits;
fraction := AND '.', digits;
exponent := AND CASE 'E', OPTIONAL (IN '+-'), digits;
number := {AND OPTIONAL '-', digits, OPTIONAL fraction, {OPTIONAL exponent}};
minsec := AND digits, ':', digits, OPTIONAL fraction;
hourminsec := AND digits, ':', digits, ':', digits, OPTIONAL fraction;
time := OR hourminsec, minsec;
function := OR CASE 'sin',
                CASE 'cos',
                CASE 'tan',
                CASE 'cot',
                CASE 'csc',
                CASE 'sec',
                CASE 'exp',
                (AND (CASE 'log'), OPTIONAL digits),
                (AND (CASE 'radix'), digits),
                CASE 'rad',
                CASE 'deg',
                CASE 'int',
                CASE 'frac',
                CASE 'sqr',
                CASE 'atn',
                CASE 'asn',
                CASE 'acs',
                CASE 'gam',
                CASE 'dms',
                (AND (CASE 'fix'), digits);
loop_operator := AND (OR ^'loop', ^'show'), (OPTIONAL IN '+-*/\');
loop_params := AND ['('], ws, level0, ws, [','], ws, level0, ws, [')'];
loop := AND loop_operator, loop_params, ws, level0, ws, [':'], ? variable;
function_variable_assign := AND variable, OPTIONAL (AND ['('], (LIST variable, [AND ws, ',', ws]), [')']);
function_variable_call := AND variable, OPTIONAL (AND ['('], (LIST level0, [AND ws, ',', ws]), [')']);
dummy := IN 0;
level0 := LIST level1, (AND ws, (OR CASE 'and', CASE 'or', CASE 'xor', CASE 'mod'), ws);
level1 := LIST level2, (AND ws, (IN '+-'), ws);
level2 := LIST level3, (AND ws, (IN '*/\'), ws);
level3 := LIST level4, (AND ws, '^', ws);
level4 := OR loop, factorial, percent, time, radixnumber, number, functionexpression, constant, function_variable_call, unaryexpression, bracketexpression;
level4dummy := OR FAIL, FAIL, FAIL, FAIL, FAIL, number, FAIL, FAIL, function_variable_call, FAIL, bracketexpression;
factorial := AND level4dummy, ['!'];
percent := AND number, ['%'];
functionexpression := AND function, ws, ['('], ws, level0, ws, [')'], ws;
constant := OR CASE 'pi', CASE 'e';
variable := {AND (IN 'A' TO 'Z', 'a' TO 'z'), (REPEAT IN 'A' TO 'Z', 'a' TO 'z', '0' TO '9' MIN 0)};
unaryexpression := AND (IN '+-'), level0;
bracketexpression := AND '(', level0, ')';
assignment := AND variable, ws, '=', ws, level0;
definition := AND function_variable_assign, ws, ':=', ws, REPEAT IN 0 TO 255 UNTIL EOS;
program := OR assignment, definition, level0;






